{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","togglemode","htmlFor","TextForm","useState","text","setText","style","color","heading","backgroundColor","placeholder","value","onChange","event","target","rows","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","filter","letter","indexOf","join","replace","trim","length","App","setmode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.49084956.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" href=\"#\">About</a>\r\n            </li>\r\n\r\n\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode === `light`?`dark`:`light`}`}>\r\n            <input className=\"form-check-input\" onClick = {props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n            <label className= \"form-check-label\"  htmlFor=\"flexSwitchCheckDefault\">Darkmode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n// Navbar.PropTypes = {\r\n//     title : PropTypes.string.isRequired \r\n//  }\r\n\r\n//  Navbar.defaultProps = {\r\n//      title : \"Textutils\"\r\n//  }\r\n","import React, { useState } from 'react'\r\n\r\n\r\nconst TextForm = ( props ) => {\r\n    const [text, setText] = useState('');\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleclearClick = () => {\r\n        let newText = '';\r\n        setText(newText);\r\n    }\r\n    const handleRemovePunctuation = () => {\r\n        let Punctuation = '!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~';\r\n        let newText = text.split('')\r\n            .filter(function (letter) {\r\n                return Punctuation.indexOf(letter) === -1;\r\n            })\r\n            .join('');\r\n\r\n        setText(newText);\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const handleextraSpaces = () => {\r\n        var newText = text.replace(/\\s+/g,' ').trim();\r\n        setText(newText)\r\n    }\r\n\r\n  \r\n\r\n    const handleOnchange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\" style = {{color:props.mode === `dark` ? `white` : `black`}}>\r\n            <div className=\"container\">\r\n                <h2 >{props.heading}</h2>\r\n                <div className=\"mb-3\">\r\n                    <textarea style={{ backgroundColor: props.mode === `dark` ? `grey` : `white` ,color:props.mode === `dark` ? `white` : `black`}} placeholder=\"Enter your text\" className=\"form-control\" value={text} onChange={handleOnchange} id=\"mybox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-danger \" onClick={handleUpClick}> upperCase</button>\r\n                <button className=\"btn btn-danger mx-3\" onClick={handleLowClick}> lowerCase</button>\r\n                <button className=\"btn btn-danger\" onClick={handleclearClick}> clearText</button>\r\n                <button className=\"btn btn-danger mx-3\" onClick={handleCopy}> Copy</button>\r\n                <button className=\"btn btn-danger\" onClick={handleRemovePunctuation}> removePunctuation</button>\r\n                <button className=\"btn btn-danger mx-3\" onClick={handleextraSpaces}> removeExtraSpaces</button>\r\n                \r\n\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <ul>\r\n                    <li><p> Entered text has <b>{text.split(\" \").length}</b> words and <b>{text.length}</b> characters.</p></li>\r\n                    <li><p> It will take <b>{0.008 * text.split(\" \").length} minutes</b> to read the complete text. </p></li>\r\n                </ul>\r\n            </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default TextForm\r\n\r\n","import './App.css';\nimport Navbar from './Components/Navbar';   \nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react'\n// \"#212529\"\n\n\nfunction App() {\n  const [mode, setmode] = useState('light')\n  const toggleMode = () => {\n    if(mode === 'light')\n    {\n      setmode('dark')\n      document.body.style.backgroundColor = \"#16232f\";\n    }\n    else{\n      setmode('light')\n      document.body.style.backgroundColor = \"white\";\n    }\n  }\n  return (\n\n    <div>\n      <Navbar title=\"Textutils\" mode  = {mode} togglemode = {toggleMode}></Navbar>\n      <div className = \"container my-3\">\n        <TextForm heading = \"Text Analyzer\" mode = {mode}></TextForm>\n      </div>\n      \n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}